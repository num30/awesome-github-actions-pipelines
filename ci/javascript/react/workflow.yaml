name: 'Build & Test'

on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: 'Build (${{ matrix.os }}, Node ${{ matrix.node }})'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        node:
          - '21'  #{version}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --prefer-offline
      - name: Build
        run: npm run build

  #{integration-tests}
  # integration:
  #   name: 'Integration Tests (${{ matrix.os }}, Node ${{ matrix.node }})'
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os:
  #         - 'ubuntu-latest'
  #         - 'macos-latest'
  #         - 'windows-latest'
  #       node:
  #         - '16'
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}
  #         cache: 'npm'
  #     - name: Install dependencies
  #       run: npm ci --prefer-offline
  #     # The integration tests are run with yarn, so we need to install it.
  #     - name: Install yarn
  #       run: npm i -g yarn
  #     - name: Run integration tests
  #       run: npm run test:integration

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '21'  #{version}
          cache: 'npm'
      - name: Install
        run: npm ci --prefer-offline
      - name: Alex
        run: npm run alex
      - name: Prettier
        run: npm run prettier -- --list-different
      - name: Eslint
        run: npm run eslint -- --max-warnings 0
